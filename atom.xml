<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>白哥</title>
  
  <subtitle>白哥的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-12T03:25:29.397Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>白哥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>leetcode995. K 连续位的最小翻转次数</title>
    <link href="http://yoursite.com/2019/04/12/leetcode995/"/>
    <id>http://yoursite.com/2019/04/12/leetcode995/</id>
    <published>2019-04-12T03:16:55.890Z</published>
    <updated>2019-04-12T03:25:29.397Z</updated>
    
    <content type="html"><![CDATA[<h2 id="995-K-连续位的最小翻转次数"><a href="#995-K-连续位的最小翻转次数" class="headerlink" title="995. K 连续位的最小翻转次数"></a>995. K 连续位的最小翻转次数</h2><p>在仅包含 0 和 1 的数组 A 中，一次 K 位翻转包括选择一个长度为 K 的（连续）子数组，同时将子数组中的每个 0 更改为 1，而每个 1 更改为 0。</p><p>返回所需的 K 位翻转的次数，以便数组没有值为 0 的元素。如果不可能，返回 -1。</p><p>示例 1：</p><p>输入：A = [0,1,0], K = 1<br>输出：2<br>解释：先翻转 A[0]，然后翻转 A[2]。<br>示例 2：</p><p>输入：A = [1,1,0], K = 2<br>输出：-1<br>解释：无论我们怎样翻转大小为 2 的子数组，我们都不能使数组变为 [1,1,1]。<br>示例 3：</p><p>输入：A = [0,0,0,1,0,1,1,0], K = 3<br>输出：3<br>解释：<br>翻转 A[0],A[1],A[2]: A变成 [1,1,1,1,0,1,1,0]<br>翻转 A[4],A[5],A[6]: A变成 [1,1,1,1,1,0,0,0]<br>翻转 A[5],A[6],A[7]: A变成 [1,1,1,1,1,1,1,1]</p><p>提示：</p><p>1.1 &lt;= A.length &lt;= 30000<br>2.1 &lt;= K &lt;= A.length<br>代码如下：</p><pre><code>class Solution {    public static int minKBitFlips(int[] A, int K) {    int times = 0;    int begin = 0;    // 如果剩下的牌不够K 则跳出    while (begin &lt;= A.length - K) {        begin = getFirstZero(A);        if (begin == -1) {            return times;        }        draw(A, begin, K);        times++;    }    return -1;    }    public static int getFirstZero(int[] A) {        for (int i = 0; i &lt; A.length; i++) {            if (A[i] == 0) {                return i;            }        }        return -1;    }    public static void draw(int[] A, int begin, int k) {        if (begin + k &gt; A.length) return;        for (int i = begin; i &lt; begin + k; i++) {            if (A[i] == 0) {                A[i] = 1;            } else {                A[i] = 0;            }        }    }}</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;995-K-连续位的最小翻转次数&quot;&gt;&lt;a href=&quot;#995-K-连续位的最小翻转次数&quot; class=&quot;headerlink&quot; title=&quot;995. K 连续位的最小翻转次数&quot;&gt;&lt;/a&gt;995. K 连续位的最小翻转次数&lt;/h2&gt;&lt;p&gt;在仅包含 0 和 1 的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>我个人博客的第一篇博客，哈哈哈...</title>
    <link href="http://yoursite.com/2019/04/11/%E6%88%91%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2%EF%BC%8C%E5%93%88%E5%93%88%E5%93%88/"/>
    <id>http://yoursite.com/2019/04/11/我个人博客的第一篇博客，哈哈哈/</id>
    <published>2019-04-11T02:09:43.000Z</published>
    <updated>2019-04-11T02:09:43.146Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/04/11/hello-world/"/>
    <id>http://yoursite.com/2019/04/11/hello-world/</id>
    <published>2019-04-11T01:46:13.293Z</published>
    <updated>2019-04-11T11:52:19.976Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
